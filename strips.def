# Comic strip download configuration file!
#
# Whitespace on both sides of each line is ignored, so indentation
# is only for human purposes.  Lines whose first real char is a hash
# will be ignored (ie: comments). 
#
# A "strip" stanza with all options defined looks like:
#
# strip foo
#    name Comic Foo
#    artist Artist Name
#    homepage http://www.foo.com/
#    searchpage http://www.foo.com/current/
#    searchpattern img src="(?P<result>/comic/\d+\.png)"
#    baseurl http://imgs.foo.com
#    extra_txt Title Text|title="(?P<result>.*?)"
#    extra_img Other Image|img src="(?P<result>/other/\d+\.png)"
#    onhold
# end
#
# Any trailing whitespace on the "searchpattern" or "extra_*"
# lines will NOT be stripped, since that might actually be part
# of the pattern you are trying to match.
#
# Required fields are: name, homepage, searchpattern.
#
# Field definitions:
#
#   name (required)
#       The english name of the strip.  Will be printed above the
#       comic image.  Also used as the name of the directory to store
#       images in, when downloading.
#
#   artist
#       Artist name(s), just used when printing the comic header in
#       the HTML output.
#
#   homepage (required)
#       Homepage of the strip, will be used in the link on the
#       comic header.
#
#   searchpage
#       The page to actually search for the comic in.  If unspecified,
#       this will default to the homepage.
#
#   intermediate_pattern
#       Some strip pages will require an initial regex to load the
#       actual page containing the strip image URL (gocomics.com
#       does this, for instance).  This is the pattern to look for
#       in searchpage, to find the actual strip URL.  The regex must
#       contain a named group `result`.  Named groups are specified like:
#       (?P<result>.*)
#
#   intermediate_relative
#       If specified, the intermediate link found by intermediate_pattern
#       is a relative URL which should be appended to the original
#       searchpage URL.  Otherwise, it is taken to be an absolute URL.
#
#   intermediate_needs_hostname
#       In the case of absolute (non-relative) URLs, this specifies that
#       the intermediate URL does not specify a hostname itself, so we
#       must take that from the original searchpage.
#
#   searchpattern (required)
#       This is the regex used to find the strip inside the searchpage.
#       The regex must contain a group (using parentheses) with the
#       symbolic name `result`, which will be used for the result.
#       Named groups in Python regex are defined like: (?P<result>.*)
#
#   baseurl
#       Prefix to append to the results found by searchpattern.  By
#       default this is a blank string, so if you don't specify baseurl,
#       the searchpattern's group should match a fully-qualified URL.
#       The magic string $homepage can be used, to specify that the
#       homepage should be used as the base URL.
#
#   extra_txt
#       This is most commonly used to find "title text" attached to
#       an image.  This is pipe-delimited - the lefthand side will
#       be the label, and the righthand side is another regex to match.
#       This will be displayed below the main comic.  You can specify
#       as many of these as you like, and they will appear in the order
#       they're defined in.  Like the other regexes, it must contain the
#       named group `result`, which can be specified like: (?P<result>.*)
#
#   extra_img
#       This is a method to load a secondary image alongside the main
#       comic.  It is pipe-delimited - the lefthand side will
#       be the label, and the righthand side is another regex to match.
#       The image will have the main "baseurl" prepended to it - there is
#       currently no way to use a different baseurl between the main comic
#       and any extras.  This will be displayed below the main comic.
#       You can specify as many of these as you like, and they will appear
#       in the order they're defined.  Currently only used for SMBC Comics,
#       which has a second graphic called the "votey."  Like the other
#       regexes, it must contain the named group `result`, which can be
#       specified like: (?P<result>.*)
#
#   onhold
#       This will prevent the comic from being displayed if it hasn't
#       changed since the previous strip.  This is intended to be used
#       for strips which update very infrequently, or are on temporary
#       hold for an extended period of time.  This way pydailystrips
#       still checks for updates but doesn't clutter the index page
#       with the same strip day after day.
#
# A "group" stanza looks like this:
#
# group frotz
#     strip1
#     strip2
#     strip3
#     ...
# end
#
# Each entry in the group should correspond to the ID of the strips
# specified after the "strip" directive.
#
# NOTE: A strip with an ID of "end" cannot be set as part of a group!
#
# NOTE: Strip and group names are always converted to lowercase in
# the code.

group cj
    achewood
    basicinstructions
    buttersafe
    calvinandhobbes
    dinosaur
    foxtrot
    indexed
    marriedtothesea
    poorlydrawnlines
    questionablecontent
    smbc
    toothpastefordinner
    warandpeas
    wondermark
    xkcd
    zits
    darkscience
    dieselsweeties
    vagrant
    jsph
    nedroid
    pbf
    redmeat
    sfam
end

strip achewood
    name Achewood (Random)
    artist Chris Onstad
    homepage https://www.achewood.com
    searchpattern <img class="comicImage" src="(?P<result>.*?/\d+\.(png|gif|jpg))"
    baseurl $homepage
    extra_txt Title Text|<img class="comicImage" .*title="(?P<result>.*?)"
end 

strip basicinstructions 
    name Basic Instructions 
    artist Scott Meyer
    homepage http://www.basicinstructions.net/
    searchpattern src="(?P<result>https://images.squarespace-cdn.com/.*?\.(gif|jpg|png))"
end

strip bc
    name B.C.
    artist Mastroianni & Hart
    homepage http://www.gocomics.com/bc/
    intermediate_pattern data-link="comics" href="(?P<result>/bc/\d+/\d+/\d+)"
    intermediate_needs_hostname
    searchpattern src="https://assets.amuniversal.com/(?P<result>.*?)"
    baseurl https://assets.amuniversal.com/
end

strip buttersafe
    name Buttersafe
    artist Alex Culang and Raynato Castro
    homepage http://buttersafe.com/
    searchpattern <img src="(?P<result>https?://(www\.)?buttersafe.com/comics/\d+-\d+-\d+[- ].*?\.(gif|jpe?g|png))"
end

strip calvinandhobbes
    name Calvin and Hobbes
    artist Bill Watterson
    homepage http://www.gocomics.com/calvinandhobbes/
    intermediate_pattern data-link="comics" href="(?P<result>/calvinandhobbes/\d+/\d+/\d+)"
    intermediate_needs_hostname
    searchpattern src="https://assets.amuniversal.com/(?P<result>.*?)"
    baseurl https://assets.amuniversal.com/
end

strip darkscience
    name Dark Science
    artist A. Senna Diaz
    homepage https://dresdencodak.com/
    searchpage https://dresdencodak.com/feed/
    searchpattern <img.*src="(?P<result>https?://(www\.)?dresdencodak.com/wp-content/uploads/\d+/\d+/((\d+-\d+-\d+-)?d(ark_)?s(cience)?_?.*?|\d+|act_\d+)\.(jpg|png|gif))"
    onhold
end

strip dieselsweeties 
    name Diesel Sweeties
    artist rstevens
    homepage http://dieselsweeties.com
    searchpattern <img class="xomic".+?src="(?P<result>/strips\d+/ds\d+\.(png|gif|jpg))"
    baseurl $homepage
    onhold
end

strip dilbert
    name Dilbert
    artist Scott Adams
    homepage http://www.dilbert.com/
    searchpage http://www.dilbert.com/
    searchpattern <img.*src="(?P<result>http://assets.amuniversal.com/[0-9a-f]+)"
end

strip dinosaur
    name Dinosaur Comics
    artist Ryan North
    homepage http://www.qwantz.com/index.php
    searchpattern <img src="(?P<result>comics(/guest\d+/.*?|/comic.*?)\.(png|gif|jpg))" class="comic"
    baseurl http://www.qwantz.com/
    extra_txt Title Text|class="comic" title="(?P<result>.*?)"
end

strip foxtrot
    name Foxtrot
    artist Bill Amend
    homepage https://foxtrot.com/
    searchpage https://foxtrot.com/feed/
    intermediate_pattern <link>(?P<result>https?://(www\.)?foxtrot\.com/\d+/\d+/\d+/.*)</link>
    searchpattern <meta property="og:image" content="(?P<result>https?://(www\.)?foxtrot\.com/wp-content/uploads/\d+/\d+/.*\.(png|gif|jpg))" />
end

strip getfuzzy
    name Get Fuzzy
    artist Darby Conley
    homepage http://www.gocomics.com/getfuzzy/
    intermediate_pattern data-link="comics" href="(?P<result>/getfuzzy/\d+/\d+/\d+)"
    intermediate_needs_hostname
    searchpattern src="https://assets.amuniversal.com/(?P<result>.*?)"
    baseurl https://assets.amuniversal.com/
end

strip grimmy
    name Mother Goose and Grimm
    artist Mike Peters
    homepage http://www.grimmy.com/
    searchpage http://www.grimmy.com/
    searchpattern meta property="og:image" content="http://www.grimmy.com/(?P<result>images/MGG_Archive/MGG_2\d\d\d/MGG-\d+-\d+-\d+.gif)"
    baseurl http://www.grimmy.com/
end

strip indexed
    name Indexed
    artist Jessica Hagy
    homepage http://thisisindexed.com/
    searchpage http://thisisindexed.com/feed/
    searchpattern <img.+?srcset=.+? https?://thisisindexed.com/(?P<result>wp-content/uploads/\d+/\d+/(morecards|card)\d+-\d+x\d+\.(jpg|gif|png)) 768
    baseurl $homepage
end

strip jsph
    name Junior Scientist Power Hour
    artist Abby Howard
    homepage https://www.jspowerhour.com/
    baseurl https://assets.jspowerhour.com
    searchpattern <img.* id="comic-img" src="//assets.jspowerhour.com(?P<result>.*?)"
    onhold
end

strip marriedtothesea
    name Married To The Sea
    artist Drew Fairweather and Natalie Dee
    homepage http://www.marriedtothesea.com/
    searchpattern <img src="https?://marriedtothesea.com/(?P<result>\d{6}/.*?\.gif)"
    baseurl $homepage
end 

strip nedroid
    name Nedroid 
    artist Anthony Clark
    homepage http://nedroid.com/
    searchpattern <img class="comic"\s+src ?= ?"(?P<result>comics\/ ?\d+-\d+-\d+-.*?\.(png|jpg|gif))"
    extra_txt Title Text|^\s*title="(?P<result>.*?)"></a>
    baseurl $homepage
    onhold
end 

strip nonsequitur
    name nonsequitur
    artist Wiley Miller
    homepage http://www.gocomics.com/nonsequitur/
    intermediate_pattern data-link="comics" href="(?P<result>/nonsequitur/\d+/\d+/\d+)"
    intermediate_needs_hostname
    searchpattern src="https://assets.amuniversal.com/(?P<result>.*?)"
    baseurl https://assets.amuniversal.com/
end

strip pbf
    name Perry Bible Fellowship
    artist Nicholas Gurewitch
    homepage http://pbfcomics.com/
    searchpattern <div id="comic"><img\s+(.*\s+)?data-src=['"](?P<result>https?://(www\.)?pbfcomics\.com/wp-content/uploads/\d+/\d+/PBF.*?\.(png|jpg|gif))['"]\s+
    onhold
end

strip peanuts
    name Peanuts
    artist Charles Schulz
    homepage http://www.gocomics.com/peanuts/
    intermediate_pattern data-link="comics" href="(?P<result>/peanuts/\d+/\d+/\d+)"
    intermediate_needs_hostname
    searchpattern src="https://assets.amuniversal.com/(?P<result>.*?)"
    baseurl https://assets.amuniversal.com/
end

strip pearlsbeforeswine
    name Pearls Before Swine
    artist Stephan Pastis
    homepage http://www.gocomics.com/pearlsbeforeswine/
    intermediate_pattern data-link="comics" href="(?P<result>/pearlsbeforeswine/\d+/\d+/\d+)"
    intermediate_needs_hostname
    searchpattern src="https://assets.amuniversal.com/(?P<result>.*?)"
    baseurl https://assets.amuniversal.com/
end

strip pickles
    name Pickles
    artist Brian Crane
    homepage http://www.gocomics.com/pickles/
    intermediate_pattern data-link="comics" href="(?P<result>/pickles/\d+/\d+/\d+)"
    intermediate_needs_hostname
    searchpattern src="https://assets.amuniversal.com/(?P<result>.*?)"
    baseurl https://assets.amuniversal.com/
end

strip poorlydrawnlines
    name Poorly Drawn Lines
    artist Reza Farazmand
    homepage http://poorlydrawnlines.com/
    searchpattern size-full">.*data-src="(?P<result>https://(www\.)?poorlydrawnlines.com/wp-content/uploads/\d+/\d+/\S+?\.(png|jpg|gif))"
end

strip questionablecontent
    name Questionable Content
    artist Jeph Jacques
    homepage https://www.questionablecontent.net
    searchpattern <img.+?src="https?://www.questionablecontent.net(?P<result>/comics/[-0-9A-F]+\.(png|gif|jpg))"
    baseurl $homepage
end

strip redmeat
    name Red Meat
    artist Max Cannon
    homepage http://www.redmeat.com/max-cannon/FreshMeat
    searchpattern img src="(?P<result>https?://media\d*.(fdncms|redmeat).com/redmeat/imager/u/redmeat/\d+/.*?-?\d{4}-?\d{2}-?\d{2}(-color)?\.(gif|jpg|png))"
    onhold
end

strip sinfest
    name Sinfest
    artist Tatsuya Ishida
    homepage http://sinfest.net/
    baseurl $homepage 
    searchpattern <img src="(?P<result>btphp/comics/\d{4}-\d{2}-\d{2}\.gif)"
end

strip smbc
    name SMBC Comics
    artist Zach Weinersmith
    homepage http://www.smbc-comics.com/
    searchpattern (?P<result>comics/[0-9-]+([-_][a-zA-Z0-9_-]+)?(bonus\d+?)?( \(\d+\))?\.(gif|jpg|png))"
    baseurl $homepage
    extra_txt Title Text|img title="(?P<result>.*?)"
    extra_img Votey|(?P<result>comics/[0-9-]+([-_]?[a-zA-Z0-9_-]+)?after(bonus\d+?)?( \(\d+\))?\.(gif|jpg|png))'
end

strip sfam
    name Scenes From A Multiverse
    artist Jon Rosenberg
    homepage http://amultiverse.com/
    searchpage http://amultiverse.com/feed/
    searchpattern src="(?P<result>https?://(i\d+.wp.com/)?amultiverse.com/wp-content/uploads/\d+/\d+/.*?\.(gif|jpg|png))(\?fit|")
    onhold
end

strip swords
    name Swords
    artist Matthew J Wills
    homepage https://swordscomic.com
    baseurl $homepage
    searchpattern <img id="comic-image".* src="(?P<result>.*?/media/Swords/images/\w+?\.(gif|jpg|png))"
    extra_txt Title Text|<img id="comic-image".* title="(?P<result>.*?)"
end

strip toothpastefordinner
    name Toothpaste For Dinner
    artist Drew Fairweather
    homepage http://www.toothpastefordinner.com/
    searchpattern <img src="https?://toothpastefordinner.com/(?P<result>\d{6}/.*?(\.(gif|jpg|png))?)"
    baseurl $homepage
end

strip vagrant
    name Hark!  A Vagrant
    artist Kate Beaton
    homepage http://www.harkavagrant.com/
    searchpattern <img src="https?://www.harkavagrant.com/(?P<result>.+/.+\.(gif|jpg|png))" title
    baseurl $homepage
    onhold
end

strip wondermark
    name Wondermark
    artist David Malki
    homepage https://www.wondermark.com/
    searchpage https://wondermark.com/feed/
    searchpattern class=".*webcomicmedia.*src="(?P<result>https?://wondermark.com/wp-content/uploads/\d+/\d+/\d+.*?\.(png|gif|jpg))"
end 

strip xkcd
    name xkcd
    artist Randall Munroe
    homepage http://www.xkcd.com/
    searchpattern src="//imgs.xkcd.com(?P<result>/comics/.*?\.(png|jpg|gif))"
    baseurl http://imgs.xkcd.com
    extra_txt Title Text|<img src=.*title="(?P<result>.*?)"
end

# On 2024-02-29, the delivery format at comicskingdom.com was changed pretty
# radically.  We'd need an intermediate_pattern now (the one listed here should
# do), but then on the next page, they're delivering the comic with one image
# per panel.  That's actually kind of clever, but the code currently does *not*
# support that.  So for now I'm just redirecting to a third-party site for it.
#strip zits
#    name Zits
#    artist Jerry Scott and Jim Borgman
#    homepage https://www.comicskingdom.com/zits
#    intermediate_pattern "comic_navigation" href="(?P<result>/zits/\d+-\d+-\d+")"
#    intermediate_needs_hostname
#    searchpattern <img id="theComicImage" (alt=".*?" )?src="(?P<result>https://safr.king.*?)"
#end
# Trying this without actually using an intermediate (just hardcoding the URL to
# the frame used to render the comic)
strip zits
    name Zits
    artist Jerry Scott and Jim Borgman
    homepage https://www.usatoday.com/comics/?content_id=zts01&feat_name=zits
    searchpage https://g-king.comicskingdom.net/v2/server/display.php?client_id=gannett&alacarte=no&host_origin=https://www.usatoday.com&host_path=/comics/&content_id=zts01
    searchpattern "comic_frame" src="(?P<result>.*?\.(png|jpg|gif))"
end

# It's actually a bit difficult to reliably get the latest comic from the
# site.  I'd orginally used the `comics` tag, but that omitted a few.  The
# `comics` *category* is better, though it also includes various posts which
# aren't actually comics.  The New Yorker-style cartoons are typically
# posted in a `cartoons` category, so I'm requesting a combined category feed
# here, now.  This is likely to pull up non-comic images occasionally; once
# I see that again I'll look into figuring out some way around it.  The other
# issue is that the way comics are posted isn't always consistent.  As I'm
# writing, the current post actually has five comic images in a single post
# (all from the same series), for instance.  At least once or twice, I've
# also seen where a comic is posted with one image per frame (sometimes with
# the "combined" image afterwards).  There's honestly probably not any good
# way to normalize all these without writing some kind of proxy for the feed,
# which is rather outside the scope of this app.
strip warandpeas
    name War and Peas
    artist Jonathan Kunz and Elizabeth Pich
    homepage https://warandpeas.com/
    searchpage https://warandpeas.com/category/comics,cartoons/feed/
    searchpattern data-orig-file="(?P<result>http.*?wp.com/warandpeas.com/wp-content/uploads/\d+/\d+/.*?\.(png|jpg|gif))\?
end

